【ModPHP 更新日志】
版本 1.7.2 (2017-3-3 17:05)【重要】
1. 修复 WebSocket 在 PHP 5.4 之后无法连接的问题。
2. 为多线程进行优化，新增 WebSocket::start() 方法，WebSocket::listen() 方法添加
   第三个参数 $autoStart，默认 true。
   如果 PHP 使用了多线程扩展，可以将 $autoStart 设置为 false,
   然后在 Threaded::run() 中调用 WebSocket::start() 方法。
3. 新增 WebSocket::$maxInput 和 WebSocket::$cliCharset 属性分别用来设置最大传入字节数
   和操作系统命令行所支持的字符集。
4. 新增配置项 config("mod.WebSocket.port") 用来替代 config("mod.websocketPort"),
   以及 config("mod.WebSocket.maxThreads") 用来设置默认 WebSocket 模式的最大线程数。
5. 新增保留类名 WebSocketThread 用来实现默认 WebSocket 模式的多线程支持。
6. 注意不要在 WebSocket 模式下进行任何直接输出，否则 Session 将会重启失败，
   如果通过命令行启动，可以使用 fwrite(STDOUT, "string") 的方式向控制台输出内容。
   你需要自己为 PHP 添加多线程扩展才能实现多线程能力。

版本 1.7.1 (2017-3-1 12:35)
1. 修复在 PHP 5.5 之后报不再支持 /e 标记的正则表达式的问题。
2. 类继承时不再忽略严格性检查。
3. 修复在高版本 PHP 环境下的一些其他的 BUG。

版本 1.7.0 (2017-2-24 1:40)
1. 修复初次运行报 user/ 目录不存在的 BUG。
2. 初次运行不再自动跳转到 install.php 文件。

版本 1.6.9 (2017-2-23 19:38)
1. 变量 $init['__DISPLAY__'] 也可以设置为绝对路径，但目录分割符必须是 /。
2. 修复之前的更新导致维护页面不报告错误的 BUG。

版本 1.6.8 (2017-2-22 8:00)
1. 修复默认 WebSocket 模式中客户端关闭后服务器不删除 $WS_USER 中的连接资源的 BUG。
2. $WS_USER 变量以及 WebSocket 事件的回调函数参数中的客户端资源使用引用值。
3. 去除 $WS_SESS、$WS_HEADER 变量，使用 $WS_INFO 替代。
4. 控制台模式下 report_403/404/500() 函数不结束程序。
5. 修复 get_me() 和 user::logout() 在非客户端环境下的 BUG。

版本 1.6.7 (2017-2-21 13:00)
1. 增加实时控制台模式，通过直接在命令行中运行 mod.php 文件（无参数），将 ModPHP 运行于守护进程中，
   并等待用户输入，仅支持 PHP 语法，不支持 shell 命令语法，示例如：
   modphp>print_r(get_user(1));

版本 1.6.6 (2017-2-21 8:40)
1. 增加 parse_cli_param() 函数用来解析命令行命令，同时支持长参数(--key value)和短参数(-k value)，
   以及无键名参数(value)，可以同时支持多个或多种参数。
2. 程序入口文件 mod.php 支持命令行模式，并添加 config('mod.cliCharset') 选项来设置运行于
   命令行模式时操作系统所支持的编码，支持使用分号 ; 来同时运行多个命令。使用示例如:
   (1) ~>php mod.php curl http://modphp.hyurl.com/version
   (2) ~>php mod.php user::get --user_id 1
   (3) ~>php mod.php MOD_VERSION
   (4) ~>php mod.php 100+100

版本 1.6.5 (2017-2-20 22:20)
1. 提升路径检测严格性。
2. curl() 函数添加 convert 选项，用来将结果转换为指定的编码。
3. 修改配置项中的 staticURL 为 staticURI，并将 staticurl() 函数和配置文件 staticurl.php 分别修改为
   staticuri() 和 static-uri.php，但依旧保留对原来用法的支持(只兼容，不推荐)。除了 staticurl.php 文件需要手动修改为
   static-uri.php。

版本 1.6.4 (2016-2-20 8:00)
1. 修复访问 http://<网站地址>/index.html 时报告 404 错误的问题。
2. 移除 __DISPLAY__ 常量，增加函数 display_file() 用以替换。
3. 更改了 template_file() 函数的行为，现在，display_file() 函数的行为完善了 template_file() 函数。
4. 新增配置 config('mod.template.appPath') 选项，如果设置，那模板根目录则相对于它而不是网站根目录。
5. 在 config('mod.template.appPath') 所设置目录下(非模板目录)的模板也会被编译，
   如果开启了 config('mod.template.compiler.enable') 选项。
6. 修复 url() 函数在使用 IP 访问时返回值中使用域名的问题。

版本 1.6.3 (2016-2-19 18:23)
1. 修复直接访问 http://<网站地址>/index.php 时报告 404 错误的问题，
   增加模板页面的 pathinfo 模式支持，需要开启 config('mod.pathinfoMode') 选项，
   开启后 create_url() 函数创建的 URL 地址将包含 index.php 模板入口文件。
2. 增加对 NGINX 服务器的全面支持，但 WebSocket 不能通过浏览器启动而运行于 Fast-CGI 模式。
   NGINX 服务器需要自己修改服务器配置文件来实现 php 的支持，ModPHP 提供修改建议(在 nginx.conf.txt 中)。
3. Session 保存路径默认使用 PHP 默认的设置。
3. 修复了一些其他的 BUG。

版本 1.6.2 (2016-2-18 22:10)
1. 模板引擎新增布局支持，使用 <layout> 标签，支持一个 data 属性为布局模板文件名。
   布局模板中使用 __CONTENT__ 标记来表示内容，支持嵌套的布局。

版本 1.6.1 (2017-2-18 7:00)
1. 完善一些正则表达式。
2. 修复直接使用控制台运行 ws.php 时可能出现报错或者无法启动程序的 BUG。
3. 修复登录后在浏览器中尝试开启 WebSocket 模式时导致服务器挂起的问题。
4. 修改为任何管理员都可以在浏览器中开启 WebSocket 模式。
5. 将语言包文件命名方式修改为默认 RFC 1766 标准的小写字母形式。

版本 1.6.0 (2017-2-17 17:05)
1. 增加安装前检测和安装新版本的功能。

版本 1.5.9 (2017-2-16 20:00)
1. 第一次安装成功后不再自动登录。
2. 将 clearTrash 统一修改为 cleanTrash。

版本 1.5.8 (2017-2-9 13:00)
1. 完善语言包加载机制。

版本 1.5.7 (2017-2-8 18:10)
1. is_ajax() 函数判断能力提升。

版本 1.5.6 (2017-2-8 0:50)
1. 修复 mod.php/obj/act URL 形式中参数获取错误的问题。

版本 1.5.5 (2017-2-7 23:30)
1. 删除文件后判断如果文件目录已为空，则删除目录。
2. 将浏览器访问 mod.php 时填充 $_GET 参数以及转换请求参数的操作提前到系统预加载过程。
3. 将输出缓冲区(mod.outputBuffering) 默认值修改为 0，即不限制。
4. 如果运行的文件不是 mod.php 或者 ws.php，is_client_call() 将始终返回 false。

版本 1.5.4 (2017-2-7 8:30)
1. 修复安装时写出两次配置的问题。
2. 在未安装情况下除了默认安装页面，其它浏览器页面也能调用 mod.php。
3. 修复维护页面总是报告 404 错误的问题。

版本 1.5.3 (2017-2-6 15:40)
1. 不再抑制模板引擎中引入文件时可能出现的错误。

版本 1.5.2 (2017-2-5 22:00)
1. is_agent()、is_curl()、is_ajax() 等函数判断能力升级。

版本 1.5.1 (2017-2-5 18:00)【重要】
1. 在默认 WebSocket 模式下，当客户端连接时将尝试自动还原会话。
2. WebSocket 模式下也能进行网站地址侦测，但仅限使用 80 或 443(SSL) 端口的网站。
3. 在进行页面判断时可以不用提交 HTTP_REFERER 参数。
4. 在实现 2 和 3 中的功能时，需要客户端在连接时设置 WebSocket 页面地址，类似这样的：
   如果网站页面地址为:    http://localhost/modphp/
   那么 WebSocket 应该为: ws://localhost:8080/modphp/
   只有这样 ModPHP 才能进行自动网站地址侦测和页面判断。
5. 新增变量 $WS_HEADER 用来保存 WebSocket 客户端连接的头部信息。
6. curl() 函数当遇到合适的响应头部将自动解析 JSON 数据，而 parseJSON 选项则设置始终解析。
7. 在线更新时，优先使用内置的 file_get_contents() 函数来获取版本信息与更新包。
8. 正式移除 http_post() 和 http_get() 函数。

版本 1.5.0 (2017-2-5 8:00)
1. 修复在 Api Hook 回调函数中进行页面判断时可能引发无限递归的问题。

版本 1.4.9 (2017-2-4 16:00)
1. curl() 函数可以设置自动解析 JSON 数据。
2. is_curl() 函数判断能力提升。

版本 1.4.8 (2017-2-4 13:00)
1. 更新 curl() 函数，将 HTTP 状态码超过 400 的结果作为错误处理。
2. http_post() 和 http_get() 函数不再建议使用，将发出错误警告。

版本 1.4.7 (2017-2-3 23:00)
1. report_433/404/500() 函数在 WebSocket 模式下不终止程序，而是将错误信息发回给客户端。
2. 增加默认 WebSocket 模式下对页面判断的支持，需要客户端发送数据时同时发送 HTTP_REFERER 为当前 URL 地址给服务器。
3. 修复了一些 BUG。

版本 1.4.6 (2017-2-3 21:00)
1. 默认 WebSocket 服务器也可以在浏览器中开启，
   并修复其在动态调用类方法（Api Hook 回调函数）时因大小写不匹配而造成访问受限的问题。

版本 1.4.5 (2017-2-3 11:30)
1. get_{module}()、get_multi_{module}() 等函数也将可数字符串作为主键/索引参数，
   如 get_user('1') 和 get_user(1) 有同等作用。
2. 修复获取文件时路径不是绝对路径的问题。

版本 1.4.4 (2017-1-30 13:20)
1. 将自动恢复功能由预加载转到加载过程。

版本 1.4.3 (2017-1-30 0:40)
1. 修复系统未安装时调用 mod.init API 而导致错误的问题。
2. 修复系统安装时报告 403 错误的问题。

版本 1.4.2 (2017-1-29 21:00)
1. 修复 mysql::open() 方法打开多连接时错误的问题。

版本 1.4.1 (2017-1-29 18:35)
1. 修复 1.4.0 版本中正确的页面报 404 错误的 BUG。

版本 1.4.0 (2017-1-29 16:30)
1. 更新 URL 解析函数 analyze_url()，仅使用斜杠分隔参数，并且进行后缀名判断，不再解析查询字符串。

版本 1.3.9 (2017-1-29 11:55)
1. 升级 WebSocket::on() 方法，可为一个事件绑定多个回调函数。
2. 修复 WebSocket 接收大数据出错的问题，将上限调整为 8MB。

版本 1.3.8 (2017-1-28 13:00)
1. 除了常规配置，其他配置不再与系统配置合并，而是直接使用用户配置。
2. 语言包也使用增量合并。

版本 1.3.7 (2017-1-26 19:53)
1. 恢复数据库配置结构文件 database.php 仅使用简单的方式合并系统和用户配置。

版本 1.3.6 (2017-1-24 23:41)
1. 修复 {module}_parent() 函数无条件获取第一条记录的问题。

版本 1.3.5 (2017-1-23 23:12)
1. 将 config(), hooks(), get_{module}() 之类的函数无数据返回值修改为 null。

版本 1.3.4 (2017-1-21 15:30)
1. 加入系统预初始化过程，可在用户模块函数文件或模板函数文件中调用登录和用户判断函数。

版本 1.3.3 (2017-1-21 2:30)
1. 将模板函数文件 function.php 修改为 functions.php，但依然保留对 function.php 文件的支持。
2. create_url() 函数添加默认参数 page = 1。

版本 1.3.2 (2017-1-17 14:49)
1. 去除上传文件最小限制，并将上传文件限制单位改为 KB。

版本 1.3.1 (2017-1-17 1:35)
1. 将数据库结构配置文件 database.php 设置为使用深层增量的方式合并系统和用户配置。

版本 1.3.0 (2017-1-16 18:20)
1. 修复 {module}::getTrash() 方法中的一处代码错误。
2. 修复 {module}::clearTrash() 命名为 deleteTash 的错误；
3. 去除 {module}::getTrash() 和 {module}::clearTrash() 方法的参数。

版本 1.2.9 (2017-1-15 18:28)
1. 更改上传文件保存方式，不再使用原始文件名进行保存，而使用上传文件的 MD5 值来作为文件名进行保存。
2. 修复增量编译模板无效的问题。

版本 1.2.8 (2017-1-14 3:26)
1. 添加 API {module}.get.before，用于在获取数据前的场景中，其回调函数的参数为传入的参数；
   并去掉 API {module}.search。
2. 完善部分 mysql 对象的调用，修复了 get_multi_{module}() 和 get_search_{module}() 函数不会跳过空记录的问题。

版本 1.2.7：
1. 将模板编译引擎所支持的后缀列表缩减为 php, html, htm，因为它们时 Apache 默认的索引文件类型，并且对代码编辑器友好。
2. 修复不解析额外伪静态地址的问题，并且使用额外伪静态地址的模板文件也支持上述文件类型。
3. 完善侦测请求模板的算法，解决无法在系统初始化完成前使用页面判断函数的问题。

版本 1.2.6【重要】：
相对于 1.0.0，1.2.6 版本增加并完善了下面这些功能和体验：
1. 增加 template.class.php 模板编译引擎，实现 PHP 语言结构 HTML 标签化，并使用 {} 标识表达式；
2. 增加 is_img()、get_template_file() 等函数实现更多功能，更新了 create_url() 函数的传参方式；
   更改了 register_module_functions() 函数的实现机制，不再手动调用，在用户环节已废弃；
3. 为配合模板引擎，修改了一些配置结构：
  （1）添加了 mod.template 配置节点，并且将 site.template 更改为 mod.template.savePath；
  （2）取消 mod.autoSerialize 配置项，使用 {module}.keys.serialize 替代；
  （3）{module}.keys.requires 修改为 {module}.keys.require;
  （3）{module}.keys.filters 修改为 {module}.keys.filter;
  （4）{module}.keys.searches 修改为 {module}.keys.search;
4. 增加了重新安装当前版本的功能，可在一定程度上解决核心文件丢失或损坏的问题；
5. 修复了其他的一些 BUG 和并完善了用户体验；

【更新说明】
此日志从 1.2.6 版本开始，以后的每一个版本更新都会在此添加说明。
