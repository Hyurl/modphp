【ModPHP 更新日志】
版本 1.5.4 (2017-2-7 8:30)
1. 修复安装时写出两次配置的问题。
2. 在未安装情况下除了默认安装页面，其它浏览器页面也能调用 mod.php。
3. 修复维护页面总是报告 404 错误的问题。

版本 1.5.3 (2017-2-6 15:40)
1. 不再抑制模板引擎中引入文件时可能出现的错误。

版本 1.5.2 (2017-2-5 22:00)
1. is_agent()、is_curl()、is_ajax() 等函数判断能力升级。

版本 1.5.1 (2017-2-5 18:00)【重要】
1. 在默认 WebSocket 模式下，当客户端连接时将尝试自动还原会话。
2. WebSocket 模式下也能进行网站地址侦测，但仅限使用 80 或 443(SSL) 端口的网站。
3. 在进行页面判断时可以不用提交 HTTP_REFERER 参数。
4. 在实现 2 和 3 中的功能时，需要客户端在连接时设置 WebSocket 页面地址，类似这样的：
   如果网站页面地址为:    http://localhost/modphp/
   那么 WebSocket 应该为: ws://localhost:8080/modphp/
   只有这样 ModPHP 才能进行自动网站地址侦测和页面判断。
5. 新增变量 $WS_HEADER 用来保存 WebSocket 客户端连接的头部信息。
6. curl() 函数当遇到合适的响应头部将自动解析 JSON 数据，而 parseJSON 选项则设置始终解析。
7. 在线更新时，优先使用内置的 file_get_contents() 函数来获取版本信息与更新包。
8. 正式移除 http_post() 和 http_get() 函数。

版本 1.5.0 (2017-2-5 8:00)
1. 修复在 Api Hook 回调函数中进行页面判断时可能引发无限递归的问题。

版本 1.4.9 (2017-2-4 16:00)
1. curl() 函数可以设置自动解析 JSON 数据。
2. is_curl() 函数判断能力提升。

版本 1.4.8 (2017-2-4 13:00)
1. 更新 curl() 函数，将 HTTP 状态码超过 400 的结果作为错误处理。
2. http_post() 和 http_get() 函数不再建议使用，将发出错误警告。

版本 1.4.7 (2017-2-3 23:00)
1. report_433/404/500() 函数在 WebSocket 模式下不终止程序，而是将错误信息发回给客户端。
2. 增加默认 WebSocket 模式下对页面判断的支持，需要客户端发送数据时同时发送 HTTP_REFERER 为当前 URL 地址给服务器。
3. 修复了一些 BUG。

版本 1.4.6 (2017-2-3 21:00)
1. 默认 WebSocket 服务器也可以在浏览器中开启，
   并修复其在动态调用类方法（Api Hook 回调函数）时因大小写不匹配而造成访问受限的问题。

版本 1.4.5 (2017-2-3 11:30)
1. get_{module}()、get_multi_{module}() 等函数也将可数字符串作为主键/索引参数，
   如 get_user('1') 和 get_user(1) 有同等作用。
2. 修复获取文件时路径不是绝对路径的问题。

版本 1.4.4 (2017-1-30 13:20)
1. 将自动恢复功能由预加载转到加载过程。

版本 1.4.3 (2017-1-30 0:40)
1. 修复系统未安装时调用 mod.init API 而导致错误的问题。
2. 修复系统安装时报告 403 错误的问题。

版本 1.4.2 (2017-1-29 21:00)
1. 修复 mysql::open() 方法打开多连接时错误的问题。

版本 1.4.1 (2017-1-29 18:35)
1. 修复 1.4.0 版本中正确的页面报 404 错误的 BUG。

版本 1.4.0 (2017-1-29 16:30)
1. 更新 URL 解析函数 analyze_url()，仅使用斜杠分隔参数，并且进行后缀名判断，不再解析查询字符串。

版本 1.3.9 (2017-1-29 11:55)
1. 升级 WebSocket::on() 方法，可为一个事件绑定多个回调函数。
2. 修复 WebSocket 接收大数据出错的问题，将上限调整为 8MB。

版本 1.3.8 (2017-1-28 13:00)
1. 除了常规配置，其他配置不再与系统配置合并，而是直接使用用户配置。
2. 语言包也使用增量合并。

版本 1.3.7 (2017-1-26 19:53)
1. 恢复数据库配置结构文件 database.php 仅使用简单的方式合并系统和用户配置。

版本 1.3.6 (2017-1-24 23:41)
1. 修复 {module}_parent() 函数无条件获取第一条记录的问题。

版本 1.3.5 (2017-1-23 23:12)
1. 将 config(), hooks(), get_{module}() 之类的函数无数据返回值修改为 null。

版本 1.3.4 (2017-1-21 15:30)
1. 加入系统预初始化过程，可在用户模块函数文件或模板函数文件中调用登录和用户判断函数。

版本 1.3.3 (2017-1-21 2:30)
1. 将模板函数文件 function.php 修改为 functions.php，但依然保留对 function.php 文件的支持。
2. create_url() 函数添加默认参数 page = 1。

版本 1.3.2 (2017-1-17 14:49)
1. 去除上传文件最小限制，并将上传文件限制单位改为 KB。

版本 1.3.1 (2017-1-17 1:35)
1. 将数据库结构配置文件 database.php 设置为使用深层增量的方式合并系统和用户配置。

版本 1.3.0 (2017-1-16 18:20)
1. 修复 {module}::getTrash() 方法中的一处代码错误。
2. 修复 {module}::clearTrash() 命名为 deleteTash 的错误；
3. 去除 {module}::getTrash() 和 {module}::clearTrash() 方法的参数。

版本 1.2.9 (2017-1-15 18:28)
1. 更改上传文件保存方式，不再使用原始文件名进行保存，而使用上传文件的 MD5 值来作为文件名进行保存。
2. 修复增量编译模板无效的问题。

版本 1.2.8 (2017-1-14 3:26)
1. 添加 API {module}.get.before，用于在获取数据前的场景中，其回调函数的参数为传入的参数；
   并去掉 API {module}.search。
2. 完善部分 mysql 对象的调用，修复了 get_multi_{module}() 和 get_search_{module}() 函数不会跳过空记录的问题。

版本 1.2.7：
1. 将模板编译引擎所支持的后缀列表缩减为 php, html, htm，因为它们时 Apache 默认的索引文件类型，并且对代码编辑器友好。
2. 修复不解析额外伪静态地址的问题，并且使用额外伪静态地址的模板文件也支持上述文件类型。
3. 完善侦测请求模板的算法，解决无法在系统初始化完成前使用页面判断函数的问题。

版本 1.2.6【重要】：
相对于 1.0.0，1.2.6 版本增加并完善了下面这些功能和体验：
1. 增加 template.class.php 模板编译引擎，实现 PHP 语言结构 HTML 标签化，并使用 {} 标识表达式；
2. 增加 is_img()、get_template_file() 等函数实现更多功能，更新了 create_url() 函数的传参方式；
   更改了 register_module_functions() 函数的实现机制，不再手动调用，在用户环节已废弃；
3. 为配合模板引擎，修改了一些配置结构：
  （1）添加了 mod.template 配置节点，并且将 site.template 更改为 mod.template.savePath；
  （2）取消 mod.autoSerialize 配置项，使用 {module}.keys.serialize 替代；
  （3）{module}.keys.requires 修改为 {module}.keys.require;
  （3）{module}.keys.filters 修改为 {module}.keys.filter;
  （4）{module}.keys.searches 修改为 {module}.keys.search;
4. 增加了重新安装当前版本的功能，可在一定程度上解决核心文件丢失或损坏的问题；
5. 修复了其他的一些 BUG 和并完善了用户体验；

【更新说明】
此日志从 1.2.6 版本开始，以后的每一个版本更新都会在此添加说明。